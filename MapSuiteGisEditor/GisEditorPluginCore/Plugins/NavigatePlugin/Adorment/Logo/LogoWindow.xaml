<Window x:Class="ThinkGeo.MapSuite.GisEditor.Plugins.LogoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Custom="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:GalaSoft_MvvmLight_Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
        xmlns:local="clr-namespace:ThinkGeo.MapSuite.GisEditor.Plugins"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:tg="clr-namespace:ThinkGeo.MapSuite.Layers;assembly=ThinkGeo.MapSuite"
        Title="{DynamicResource LogoWindowTitle}"
        Width="560"
        Height="280"
        ResizeMode="NoResize"
        Style="{StaticResource WindowStyle}">
    <Window.DataContext>
        <local:LogoViewModel />
    </Window.DataContext>
    <Grid Margin="{DynamicResource MainWindowMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <local:LogoModeToIsCheckedConverter x:Key="logoModeToIsChecked" />
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style x:Key="LocationLabelStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="75" />
                <Setter Property="TextAlignment" Value="Right" />
            </Style>
            <ObjectDataProvider x:Key="AdornmentLocationProvider"
                                MethodName="GetValues"
                                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="tg:AdornmentLocation" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="LogoSizeModeProvider"
                                MethodName="GetValues"
                                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:LogoSizeMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </Grid.Resources>
        <GroupBox Header="{DynamicResource LogoWindowLogoGroupHeader}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>
                <StackPanel VerticalAlignment="Center">
                    <RadioButton VerticalAlignment="Center"
                                 Content="{DynamicResource LogoWindowLogoNoneLabel}"
                                 GroupName="LogoModeGroup"
                                 IsChecked="True" />
                    <Grid Margin="0 5 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <RadioButton x:Name="CustomLogoRadioButton"
                                     VerticalAlignment="Center"
                                     Content="{DynamicResource LogoWindowLogoCustomLabel}"
                                     GroupName="LogoModeGroup"
                                     IsChecked="{Binding SelectedLogoMode,
                                                         Converter={StaticResource logoModeToIsChecked}}" />

                        <TextBox Grid.Column="1"
                                 IsReadOnly="True"
                                 Text="{Binding LogoPath}" />
                        <Button Grid.Column="2" Width="70" Margin="5 0 0 0"
                                Content="{DynamicResource GeneralBrowserContent}"
                                IsEnabled="{Binding ElementName=CustomLogoRadioButton,
                                                    Path=IsChecked}">
                            <Custom:Interaction.Triggers>
                                <Custom:EventTrigger EventName="Click">
                                    <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding BrowseCommand, Mode=OneWay}" />
                                </Custom:EventTrigger>
                            </Custom:Interaction.Triggers>
                        </Button>
                    </Grid>
                </StackPanel>
                <StackPanel Grid.Column="1"
                            Margin="10 0 0 0"
                            VerticalAlignment="Center">
                    <TextBlock HorizontalAlignment="Left" Text="{DynamicResource LogoWindowLogoPreviewLabel}" />
                    <Border Margin="0 5 5 5"
                            BorderBrush="Black"
                            BorderThickness="2">
                        <Image Width="100"
                               Height="60"
                               Source="{Binding Preview}" />
                    </Border>
                </StackPanel>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Row="1" Header="{DynamicResource LogoWindowLogoSizeGroupHeader}">
            <GroupBox.Resources>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="5 0 0 0" />
                    <Setter Property="Width" Value="60" />
                </Style>
            </GroupBox.Resources>
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Width="{Binding ElementName=CustomLogoRadioButton, Path=ActualWidth}" Text="{DynamicResource LogoWindowLogoLocationLabel}" />
                    <ComboBox Width="100"
                              ItemsSource="{Binding Source={StaticResource AdornmentLocationProvider}}"
                              SelectedItem="{Binding SelectedLocation,
                                                     Mode=TwoWay}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="{x:Static tg:AdornmentLocation.UseOffsets}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource LocationLabelStyle}" Text="{DynamicResource LogoWindowLogoLeftOffsetLabel}" />
                        <TextBox Text="{Binding Left, Mode=TwoWay}" />
                        <TextBlock Style="{StaticResource LocationLabelStyle}" Text="{DynamicResource LogoWindowLogoTopOffsetLabel}" />
                        <TextBox Text="{Binding Top, Mode=TwoWay}" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Margin="0 5 0 0" Orientation="Horizontal">
                    <TextBlock Width="{Binding ElementName=CustomLogoRadioButton, Path=ActualWidth}" Text="{DynamicResource CommonSizeText}" />
                    <ComboBox Width="100"
                              ItemsSource="{Binding Source={StaticResource LogoSizeModeProvider}}"
                              SelectedItem="{Binding SelectedSizeMode,
                                                     Mode=TwoWay}" />
                    <StackPanel IsEnabled="{Binding IsFixedSizeSettingEnabled}" Orientation="Horizontal">
                        <TextBlock Style="{StaticResource LocationLabelStyle}" Text="{DynamicResource LogoWindowWidthLabel}" />
                        <TextBox Text="{Binding Width, Mode=TwoWay}" />
                        <TextBlock Style="{StaticResource LocationLabelStyle}" Text="{DynamicResource LogoWindowHeightLabel}" />
                        <TextBox Text="{Binding Height, Mode=TwoWay}" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <StackPanel Grid.Row="2"
                    Margin="0 8 0 0"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
            <Button Content="{DynamicResource ConfigurationOKLable}"
                    IsEnabled="{Binding CanConfirm}"
                    Style="{DynamicResource ConfigurationButtonStyle}">
                <Custom:Interaction.Triggers>
                    <Custom:EventTrigger EventName="Click">
                        <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding OKCommand, Mode=OneWay}" />
                    </Custom:EventTrigger>
                </Custom:Interaction.Triggers>
            </Button>
            <Button Content="{DynamicResource ConfigurationCancelLable}" Style="{DynamicResource ConfigurationButtonStyle}">
                <Custom:Interaction.Triggers>
                    <Custom:EventTrigger EventName="Click">
                        <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding CancelCommand, Mode=OneWay}" />
                    </Custom:EventTrigger>
                </Custom:Interaction.Triggers>
            </Button>
            <Button Content="{DynamicResource ConfigurationApplyLable}"
                    IsEnabled="{Binding CanConfirm}"
                    Style="{DynamicResource ConfigurationButtonStyle}">
                <Custom:Interaction.Triggers>
                    <Custom:EventTrigger EventName="Click">
                        <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding ApplyCommand, Mode=OneWay}" />
                    </Custom:EventTrigger>
                </Custom:Interaction.Triggers>
            </Button>
            <ContentPresenter x:Name="HelpContainer"
                          Width="70" Margin="11 0 0 0"/>
        </StackPanel>
    </Grid>
</Window>