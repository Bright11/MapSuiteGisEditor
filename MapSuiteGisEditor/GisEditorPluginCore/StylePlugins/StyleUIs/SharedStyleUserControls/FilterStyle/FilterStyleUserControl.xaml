<styleuc:StyleUserControl x:Class="ThinkGeo.MapSuite.GisEditor.Plugins.FilterStyleUserControl"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:AvalonEdit="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit"
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                          xmlns:ext="clr-namespace:ThinkGeo.MapSuite.WpfDesktop.Extension;assembly=ThinkGeo.MapSuite.WpfDesktop.Extension"
                          xmlns:local="clr-namespace:ThinkGeo.MapSuite.GisEditor.Plugins"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                          xmlns:styleuc="clr-namespace:ThinkGeo.MapSuite.GisEditor;assembly=GisEditorInfrastructure"
                          xmlns:sys="clr-namespace:System;assembly=mscorlib"
                          mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="0 5 0 5" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="11" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="0 5 0 5" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FontSize" Value="11" />
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="Margin" Value="0 5 0 5" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FontSize" Value="11" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="0 5 5 5" />
                <Setter Property="Height" Value="20" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="Width" Value="70" />
            </Style>
            <!--<Style TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate >
                    </Setter.Value>
                </Setter>
            </Style>-->
            <local:FilterStyleMatchTypeToStringConverter x:Key="FilterStyleMatchTypeToStringConverter" />
            <local:EnumToStringConverter x:Key="DlrConditionModeConvertor" EnumType="{x:Type ext:FilterStyleScriptType}" />
            <local:LogicalConverter x:Key="LogicalConvertor" />
            <DataTemplate x:Key="MatchValueCell">
                <ScrollViewer Height="30" VerticalAlignment="Center" VerticalScrollBarVisibility="Auto">
                    <TextBlock VerticalAlignment="Center"
                           Text="{Binding .,
                                          Converter={StaticResource FilterStyleMatchTypeToStringConverter}}"
                           TextAlignment="Left"
                           TextWrapping="Wrap" />
                </ScrollViewer>
            </DataTemplate>
            <DataTemplate x:Key="EditCell">
                <StackPanel Width="65"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                    <Button Width="20"
                            Height="20"
                            Margin="10 0 0 0"
                            Command="{Binding RelativeSource={RelativeSource AncestorType=ListView},
                                              Path=DataContext.EditConditionCommand}"
                            CommandParameter="{Binding .}">
                        <Image Source="/GisEditorPluginCore;component/Images/Style_Edit.png" />
                    </Button>
                    <Button Width="20"
                            Height="20"
                            Margin="5 0 10 0"
                            HorizontalAlignment="Center"
                            Command="{Binding RelativeSource={RelativeSource AncestorType=ListView},
                                              Path=DataContext.RemoveConditionCommand}"
                            CommandParameter="{Binding .}">
                        <Image Source="/GisEditorPluginCore;component/Images/Delete.png" />
                    </Button>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="LogicalCell">
                <ComboBox x:Name="LogicalComboBox"
                              SelectedValue="{Binding Logical,
                                                      Mode=TwoWay,
                                                      Converter={StaticResource ResourceKey=LogicalConvertor}}">
                    <ComboBox.Items>
                        <sys:String>AND</sys:String>
                        <sys:String>OR</sys:String>
                    </ComboBox.Items>
                </ComboBox>
            </DataTemplate>
            <DataTemplate x:Key="LeftBracketsCell">
                <ToggleButton x:Name="LeftBrackets" Foreground="#aa000000" Background ="#00F0F0F0" BorderBrush="Transparent" Content="(" Width="15" 
                              IsChecked="{Binding IsLeftBracket,
                                                      Mode=TwoWay}" >
                </ToggleButton>
            </DataTemplate>

            <DataTemplate x:Key="RightBracketsCell">
                <ToggleButton Content=")" Foreground="#aa000000" Width="15" Background="#00F0F0F0" BorderBrush="Transparent" IsChecked="{Binding IsRightBracket,
                                                      Mode=TwoWay}">
                </ToggleButton>
            </DataTemplate>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Row="0"
                   Grid.Column="0"
                   Text="{DynamicResource ResourceKey=FilterStyleUserControlNameText}" />
        <!--  <TextBlock Grid.Row="1" Grid.Column="0" Text="Style Type"></TextBlock>  -->
        <TextBlock Grid.Row="2"
                   Grid.Column="0"
                   Text="{DynamicResource ResourceKey=FilterStyleUserControlFilterConditionsText}" />

        <TextBox Grid.Row="0" MaxHeight="50" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                 Grid.Column="1"
                 Text="{Binding Path=Name,
                                Mode=TwoWay}" />

        <TabControl Grid.Row="1" Grid.ColumnSpan="2">
            <TabItem Header="{DynamicResource ResourceKey=FilterStyleUserControlFilterSimpleHeader}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="45" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               Text="{DynamicResource ResourceKey=FilterStyleUserControlFilterConditionsText}" />
                    <Button Grid.Row="0"
                            Grid.Column="1"
                            HorizontalAlignment="Left"
                            Command="{Binding AddConditionCommand}"
                            Content="{DynamicResource ResourceKey=FilterStyleUserControlAddNewContent}" />
                    <Button Grid.Column="2" HorizontalAlignment="Left" Command="{Binding ShowResultsCommand}" Content="{DynamicResource ResourceKey=FilterStyleUserControlShowResultText}"/>
                    <ListView Grid.Row="1"
                              Grid.ColumnSpan="3"
                              Margin="0,5,0,0"
                              GridViewColumnHeader.Click="ListViewColumnHeader_Click"
                              ItemsSource="{Binding FilterConditions}"
                              SelectedItem="{Binding SelectedFilterCondtion,
                                                Mode=TwoWay}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="30" CellTemplate="{StaticResource LeftBracketsCell}" />
                                <GridViewColumn Width="270"
                                                CellTemplate="{StaticResource MatchValueCell}"
                                                Header="{DynamicResource ResourceKey=FilterStyleUserControlMatchValueHeader}" />
                                <GridViewColumn Width="30" CellTemplate="{StaticResource RightBracketsCell}" />
                                <GridViewColumn Width="70" CellTemplate="{StaticResource LogicalCell}" />
                                <GridViewColumn Width="70" CellTemplate="{StaticResource EditCell}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <TextBlock Grid.Row="2" TextWrapping="Wrap" Text="{Binding FilterScriptDescription}" Grid.ColumnSpan="3" Margin="0,5,0,5"/>
                    <StackPanel Grid.Row="1" Grid.Column="3" VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="Button">
                                <Setter Property="Width" Value="24" />
                                <Setter Property="Height" Value="24" />
                                <Setter Property="Margin" Value="5" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <Button Command="{Binding ToTopCommand}" IsEnabled="{Binding CanMoveUp}">
                            <Image Source="/GisEditorPluginCore;component/Images/toTop.png" />
                        </Button>
                        <Button 
                            Command="{Binding MoveUpCommand}"
                            IsEnabled="{Binding CanMoveUp}">
                            <Image Source="/GisEditorPluginCore;component/Images/moveUp.png" />
                        </Button>
                        <Button Command="{Binding MoveDownCommand}" IsEnabled="{Binding CanMoveDown}">
                            <Image Source="/GisEditorPluginCore;component/Images/moveDown.png" />
                        </Button>
                        <Button Command="{Binding ToBottomCommand}" IsEnabled="{Binding CanMoveDown}">
                            <Image Source="/GisEditorPluginCore;component/Images/toBottom.png" />
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource ResourceKey=FilterStyleUserControlFilterScriptHeader}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               Text="{DynamicResource ResourceKey=FilterStyleUserControlFilterScriptText}" />
                    <ComboBox x:Name="ScriptComboBox"
                              Grid.Row="0"
                              Grid.Column="1"
                              SelectedValue="{Binding FilterStyleScriptType,
                                                      Mode=TwoWay,
                                                      Converter={StaticResource ResourceKey=DlrConditionModeConvertor}}" />
                    <AvalonEdit:TextEditor x:Name="textEditor"
                                           Grid.Row="1"
                                           Grid.ColumnSpan="2"
                                           local:TextEditorExtension.ScriptText="{Binding FilterScript,
                                                                                          Mode=TwoWay}"
                                           ShowLineNumbers="True"
                                           TextChanged="TextEditor_TextChanged" />
                    <TextBlock Grid.Row="2"
                               Grid.Column="0"
                               HorizontalAlignment="Left">
                        <Hyperlink Click="Hyperlink_Click">Import code sample</Hyperlink>
                    </TextBlock>
                    <Button Grid.Row="2"
                            Grid.Column="1"
                            Margin="0 0 85 0"
                            HorizontalAlignment="Right"
                            Command="{Binding ViewDataCommand}"
                            Content="{DynamicResource ResourceKey=FilterConditionWindowViewDataContent}" />
                    <Button Grid.Row="2"
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            Command="{Binding TestScriptCommand}"
                            Content="{DynamicResource ResourceKey=FilterStyleUserControlFilterTestScriptContent}" />
                </Grid>
            </TabItem>
        </TabControl>

        <!--
            <Button Grid.Row="2"
            Grid.Column="1"
            HorizontalAlignment="Left"
            Command="{Binding AddConditionCommand}"
            Content="{DynamicResource ResourceKey=FilterStyleUserControlAddNewContent}" />
        -->

    </Grid>
</styleuc:StyleUserControl>