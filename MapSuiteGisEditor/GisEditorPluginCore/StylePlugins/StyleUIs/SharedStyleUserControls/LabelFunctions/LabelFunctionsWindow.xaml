<Window x:Class="ThinkGeo.MapSuite.GisEditor.Plugins.LabelFunctionsWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
              xmlns:AvalonEdit="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit"
        xmlns:local="clr-namespace:ThinkGeo.MapSuite.GisEditor.Plugins"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" WindowStartupLocation="CenterOwner"
         Height="400" Width="500" Title="Label Functions" ResizeMode="NoResize">
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock Margin="5" TextWrapping="Wrap"  Text="Label Functions window allows you to write C# code to format your labels. "/>
        <GroupBox Grid.Row="1" Header="Columns">
            <Grid  Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer Height="80">
                    <ItemsControl ItemsSource="{Binding ColumnItems}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Column="1" ItemsSource="{Binding ColumnNames}" DisplayMemberPath="Value" SelectedItem="{Binding SelectionColumn,Mode=TwoWay}"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
                <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Content="Add" Command="{Binding AddColumnCommand}" Width="70"  Margin="0 5 0 0"/>
                    <Button Content="Remove" Command="{Binding RemoveColumnCommand}" Width="70"  Margin="5 5 0 0"/>
                </StackPanel>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Row="2" Header="Label Functions">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="0 5 0 5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button 
                            Grid.Column="0" Width="120"
                            Content="Import code sample" Click="ImportButton_Click"/>
                    <ToggleButton  Margin="5 0 0 0" 
                            Grid.Column="1" Width="70"
                            Content="Templates" x:Name="TemplatesButton"/>
                    <local:NonTopMostPopup x:Name="popUp2"
                                       Width="420"
                                       AllowsTransparency="True"
                                       IsOpen="{Binding ElementName=TemplatesButton,
                                                        Path=IsChecked,
                                                        Mode=TwoWay}"
                                       OffsetX="0"
                                       OffsetY="5"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=TemplatesButton}"
                                       PopupAnimation="Slide"
                                       StaysOpen="True">
                        <Border BorderBrush="Black" BorderThickness="1" Background="White">
                            <GroupBox Header="Label functions templates">
                                <StackPanel Margin="5" >
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Margin" Value="5 0 5 5"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <TextBlock Text="LEFT function template:" FontWeight="Bold"/>
                                    <TextBlock Text="column1 = column1.Substring(0, 2);" />
                                    <TextBlock Text="RIGHT function template:" FontWeight="Bold"/>
                                    <TextBlock Text="column1 = column1.Substring(column1.Length - 2, 2);" />
                                    <TextBlock Text="SUBSTRING function template:" FontWeight="Bold"/>
                                    <TextBlock Text="column1 = column1.Substring(2, 3);" />
                                    <TextBlock Text="FORMAT function template:" FontWeight="Bold"/>
                                    <TextBlock Text="column1 = string.Format(&quot;{0:N2}&quot;, column1);" />
                                    <TextBlock Text="INDEXOF function template:" FontWeight="Bold"/>
                                    <TextBlock Text="column1 = column1.IndexOf(&quot;abc&quot;).ToString();" />
                                    <TextBlock Text="LASTINDEXOF function template:" FontWeight="Bold"/>
                                    <TextBlock Text="column1 = column1.LastIndexOf(&quot;abc&quot;).ToString();" />
                                    <TextBlock Text="TRIM function template:" FontWeight="Bold"/>
                                    <TextBlock Text="column1 = column1.Trim();" />
                                </StackPanel>
                            </GroupBox>
                        </Border>
                    </local:NonTopMostPopup>
                    <Button  Margin="5 0 0 0" 
                            Grid.Column="2" Width="70"
                            Command="{Binding ViewDataCommand}"
                            Content="View Data" />
                    <Button Margin="5 0 0 0" Width="70"
                            Grid.Column="3"
                            Content="Test" Command="{Binding TestCommand}"/>
                </Grid>
                <AvalonEdit:TextEditor x:Name="textEditor"  local:TextEditorExtension.ScriptText="{Binding ScriptText,
                                                                                          Mode=TwoWay}" 
                                           Grid.Row="1"
                                           ShowLineNumbers="True"
                                           TextChanged="TextEditor_TextChanged" />
            </Grid>
        </GroupBox>
        <StackPanel Grid.Row="3" HorizontalAlignment="Right" Margin="0 5 0 5" Orientation="Horizontal">
            <Button Content="OK" Width="70" Click="OKButton_Click"/>
            <Button Content="Cancel" Width="70" Margin="10 0 0 0" IsCancel="True"/>
        </StackPanel>
    </Grid>
</Window>
