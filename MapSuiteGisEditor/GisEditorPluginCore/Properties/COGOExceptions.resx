<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AngleDistanceCogoFileRecordIsValid" xml:space="preserve">
    <value>The angle distance record in traverse file is not defined a correct format, please using the format like "AD 10 100" which means "angle distance with 10 degree of offset and 100 unit of length"</value>
  </data>
  <data name="ArcAndChordLengthISValid" xml:space="preserve">
    <value>The arc and chord length cannot make a curve, make sure both of them are more than 0 and the arc length must longer than chord length.</value>
  </data>
  <data name="DegreeIsValidQuadrantBearing" xml:space="preserve">
    <value>The degree value is not valid, it must between 0.00 and 90.00 in the quadrant bearing and decimal degree</value>
  </data>
  <data name="DirectionDistanceCogoFileRecordIsValid" xml:space="preserve">
    <value>The direction distance record in traverse file is not defined a correct format, please using the format like "DD 10 100" which means "direction distance with 10 degree of offset and 100 unit of length.".</value>
  </data>
  <data name="DirectionIsValid" xml:space="preserve">
    <value>The start or end direction is invalid, make sure the quadrant bearing direction string is correct.</value>
  </data>
  <data name="DoubleIsValid" xml:space="preserve">
    <value>The value of double cannot be NaN or Infinity.</value>
  </data>
  <data name="DoubleIsValidDecimalDegreeValue" xml:space="preserve">
    <value>The value is not a valid decimal degree number, decimal degrees must between 0.00 and 360.00.</value>
  </data>
  <data name="LineShapeHasAtLeastOneVertex" xml:space="preserve">
    <value>The line shape must have at least one vertex.</value>
  </data>
  <data name="LineShapeIsValid" xml:space="preserve">
    <value>The line shape must have at least two vertices.</value>
  </data>
  <data name="NonTangentCurveCogoFileRecordIsValid" xml:space="preserve">
    <value>The non-tangent curve record in traverse file is not defined a correct format, please using the format like "NC D 10 R 100 C 20 L" which means "non-tangent curve with 10 degree to the right of center angle, 100 unit of radius length, 20 degree of chord offset and curve to the left".</value>
  </data>
  <data name="ParameterIsNotEmpty" xml:space="preserve">
    <value>The string cannot be empty or null.</value>
  </data>
  <data name="ParameterIsNotNull" xml:space="preserve">
    <value>The object cannot be null.</value>
  </data>
  <data name="PointCogoFileRecordIsValid" xml:space="preserve">
    <value>The point record in traverse file is not defined a correct format, please using the format like "SP 10 10" or "XY 10 10" which means "point with position of 10,10".</value>
  </data>
  <data name="StringCanConvertToDouble" xml:space="preserve">
    <value>The string cannot be converted to a number, make sure it's a valid number string.</value>
  </data>
  <data name="StringIsValidDecimalDegreeValue" xml:space="preserve">
    <value>The value is not a valid decimal degree number, decimal degrees must between 0.00 and 360.00.</value>
  </data>
  <data name="TangentCurveCogoFileRecordIsValid" xml:space="preserve">
    <value>The tangent curve record in traverse file is not defined a correct format, please using the format like "TC D 10 R 100 L" which means "tangent curve" with 10 degree to the right of center angle, 100 unit of radius length and curve to the left.</value>
  </data>
  <data name="ValueCanNotEqualDecimalDegree" xml:space="preserve">
    <value>The cogo direction unit is not valid.</value>
  </data>
  <data name="ValueCanNotEqualDMS" xml:space="preserve">
    <value>The cogo direction unit is not valid.</value>
  </data>
  <data name="ValueCanNotEqualGradians" xml:space="preserve">
    <value>The cogo direction unit is not valid.</value>
  </data>
  <data name="ValueCanNotEqualRadians" xml:space="preserve">
    <value>The cogo direction unit is not valid.</value>
  </data>
  <data name="ValueIsCanNotEqualPolar" xml:space="preserve">
    <value>The cogo direction unit is not valid.</value>
  </data>
  <data name="ValueIsValidForSpecificedUnit" xml:space="preserve">
    <value>The map unit is not valid, it must be Decimal Degrees, Feet or Meters.</value>
  </data>
  <data name="ValueIsValidLatitudeForDecimalDegreeUnit" xml:space="preserve">
    <value>The value is not a valid latitude for decimal degrees, the latitude must between -90.00 and 90.00.</value>
  </data>
  <data name="ValueIsValidlongitudeForDecimalDegreeUnit" xml:space="preserve">
    <value>The value is not a valid longitude for decimal degrees, the longitude must between -180.00 and 180.00.</value>
  </data>
  <data name="VertexCountIsValid" xml:space="preserve">
    <value>The vertex count is not valid, it must be greater than 0.</value>
  </data>
  <data name="DirectionParameterIsInValid" xml:space="preserve">
    <value>Invalid direction value.</value>
  </data>
  <data name="DegreesValueInValid" xml:space="preserve">
    <value>Degrees should be between 0.00 and 90.00</value>
  </data>
  <data name="DirectionTypeInvalid" xml:space="preserve">
    <value>The direction type is invalid.</value>
  </data>
  <data name="DirectionUnitInvalid" xml:space="preserve">
    <value>The direction unit is invalid.</value>
  </data>
  <data name="OpacityIsValid" xml:space="preserve">
    <value>The opacity is not valid, it must be between 0.0 and 1.0.</value>
  </data>
  <data name="AngleFormatUnknown" xml:space="preserve">
    <value>The angle format is not valid</value>
  </data>
  <data name="ValueIsValidDegreeOrMinuteOrSecond" xml:space="preserve">
    <value>The value is not a valid degree or minute or second, the value must between 0 and 60.</value>
  </data>
  <data name="NecessaryParametersNumberNotEnough" xml:space="preserve">
    <value>Please enter two items.</value>
  </data>
  <data name="ChordRadiusInvalid" xml:space="preserve">
    <value>Chord length should be shorter than twice of radius length.</value>
  </data>
  <data name="ArcChordInvalid" xml:space="preserve">
    <value>Arc length should be longer than chord length.</value>
  </data>
  <data name="DoubleIsNegative" xml:space="preserve">
    <value>This value shouldn't be negative.</value>
  </data>
</root>