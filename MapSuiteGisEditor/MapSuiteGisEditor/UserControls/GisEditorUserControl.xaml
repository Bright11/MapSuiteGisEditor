<UserControl
    x:Class="ThinkGeo.MapSuite.GisEditor.GisEditorUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:a="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gisToolKit="clr-namespace:ThinkGeo.MapSuite.GisEditor;assembly=GisEditorToolkits"
    xmlns:infrastructure="clr-namespace:ThinkGeo.MapSuite.GisEditor;assembly=GisEditorInfrastructure"
    xmlns:interaction="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:ThinkGeo.MapSuite.GisEditor"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvmex="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
    xmlns:r="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
    d:DesignHeight="768"
    d:DesignWidth="1024"
    MouseEnter="ExplorerShell_MouseEnter"
    mc:Ignorable="d">
    <Control.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/IconTheme.xaml" />
                <ResourceDictionary Source="../Themes/RibbonTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Control.Resources>
    <Grid>
        <Grid.Resources>
            <Style TargetType="r:RibbonApplicationMenuItem">
                <Setter Property="local:RibbonExtension.IsAppliedUnderscore" Value="True" />
            </Style>
        </Grid.Resources>
        <Grid.InputBindings>
            <KeyBinding Key="F1" Command="{x:Static local:GisEditorCommands.OpenHelpPageCommand}" />
            <KeyBinding Command="{x:Static local:GisEditorCommands.NewProjectCommand}" Gesture="Ctrl+N" />
            <KeyBinding Command="{x:Static local:GisEditorCommands.OpenProjectCommand}" Gesture="Ctrl+O" />
            <KeyBinding Command="{x:Static local:GisEditorCommands.SaveProjectCommand}" Gesture="Ctrl+S" />
            <KeyBinding Command="{x:Static local:GisEditorCommands.SaveProjectAsCommand}" Gesture="Ctrl+Alt+S" />
            <KeyBinding Command="{x:Static local:GisEditorCommands.OpenPluginsDialogCommand}" Gesture="Ctrl+U" />
            <KeyBinding Command="{x:Static local:GisEditorCommands.OpenOptionsDialogCommand}" Gesture="Ctrl+I" />
        </Grid.InputBindings>
        <Grid x:Name="MainPanel">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>
            <r:Ribbon
                x:Name="ribbonContainer"
                Grid.Row="0"
                ApplicationMenu="{StaticResource ApplicationMenuKey}"
                HelpPaneContent="{StaticResource HelpButtonKey}"
                QuickAccessToolBar="{StaticResource QuickAccessBarKey}">
                <r:Ribbon.Items>
                    <r:RibbonTab
                        Header="{DynamicResource ResourceKey=HomeRibbonTabHeader}"
                        IsSelected="True"
                        KeyTip="H">
                        <r:RibbonGroup
                            CanAddToQuickAccessToolBarDirectly="False"
                            GroupSizeDefinitions="{DynamicResource DefaultRibbonGroupStyleKey}"
                            Header="{DynamicResource ProjectGroupHeader}"
                            KeyTip="P">
                            <r:RibbonButton
                                Command="{x:Static local:GisEditorCommands.NewProjectCommand}"
                                KeyTip="N"
                                Label="{DynamicResource NewProjectHeader}"
                                LargeImageSource="/MapSuiteGisEditor;component/Images/newProject.png"
                                QuickAccessToolBarId="NewProject"
                                SmallImageSource="/MapSuiteGisEditor;component/Images/newProject.png"
                                ToolTipDescription="{DynamicResource NewProjectToolTipDescription}"
                                ToolTipTitle="{DynamicResource NewProjectToolTipTitle}" />
                            <r:RibbonButton
                                Command="{x:Static local:GisEditorCommands.OpenProjectCommand}"
                                KeyTip="O"
                                Label="{DynamicResource OpenProjectHeader}"
                                LargeImageSource="/MapSuiteGisEditor;component/Images/folder-open_32.png"
                                QuickAccessToolBarId="OpenProject"
                                SmallImageSource="/MapSuiteGisEditor;component/Images/folder-open_32.png"
                                ToolTipDescription="{DynamicResource OpenProjectFileTips}"
                                ToolTipTitle="{DynamicResource OpenProjectToolTipTitle}" />
                            <r:RibbonSplitButton
                                Command="{x:Static local:GisEditorCommands.SaveProjectCommand}"
                                HeaderKeyTip="S"
                                KeyTip="E"
                                Label="{DynamicResource SaveProjectHeader}"
                                QuickAccessToolBarId="SaveProject"
                                SmallImageSource="/MapSuiteGisEditor;component/Images/SaveHS.png"
                                ToolTipDescription="{DynamicResource SaveProjectFileTips}"
                                ToolTipTitle="{DynamicResource SaveProjectToolTipTitle}">
                                <r:RibbonSplitButton.Items>
                                    <r:RibbonMenuItem
                                        Command="{x:Static local:GisEditorCommands.SaveProjectAsCommand}"
                                        Header="{DynamicResource SaveAsProjectHeader}"
                                        ImageSource="/MapSuiteGisEditor;component/Images/SaveHS.png"
                                        KeyTip="S"
                                        QuickAccessToolBarId="SaveProjectAs"
                                        ToolTipDescription="{DynamicResource SaveAsProjectFileTips}"
                                        ToolTipTitle="{DynamicResource SaveAsProjectToolTipTitle}" />
                                </r:RibbonSplitButton.Items>
                            </r:RibbonSplitButton>
                            <r:RibbonButton
                                Command="{x:Static local:GisEditorCommands.OpenPluginsDialogCommand}"
                                KeyTip="P"
                                Label="{DynamicResource PluginManagerHeader}"
                                QuickAccessToolBarId="PluginManager"
                                SmallImageSource="/MapSuiteGisEditor;component/Images\pluginManager.png"
                                ToolTipDescription="{DynamicResource PluginConfigTips}"
                                ToolTipTitle="{DynamicResource PluginManagerToolTipTitle}" />
                            <!--<r:RibbonMenuButton x:Name="OpenDockWindowButton"
                                                CanAddToQuickAccessToolBarDirectly="False"
                                                Label="{DynamicResource OpenDockLabel}"
                                                SmallImageSource="/MapSuiteGisEditor;component/Images/open.png"
                                                ToolTipDescription="{DynamicResource OpenDockToolTipDescription}"
                                                ToolTipTitle="{DynamicResource OpenDockToolTipTitle}">
                                <r:RibbonMenuButton.ItemContainerStyle>
                                    <Style>
                                        <Setter Property="r:RibbonMenuItem.IsChecked" Value="{Binding Tag}" />
                                        <Setter Property="r:RibbonMenuItem.Command" Value="{x:Static local:GisEditorCommands.OpenDockableContentCommand}" />
                                        <Setter Property="r:RibbonMenuItem.CommandParameter" Value="{Binding}" />
                                    </Style>
                                </r:RibbonMenuButton.ItemContainerStyle>
                                <r:RibbonMenuButton.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Title}" />
                                    </DataTemplate>
                                </r:RibbonMenuButton.ItemTemplate>
                            </r:RibbonMenuButton>-->
                            <Grid>
                                <Border
                                    x:Name="border"
                                    BorderThickness="1"
                                    MouseEnter="Border_MouseEnter"
                                    MouseLeave="Border_MouseLeave">
                                    <ToggleButton
                                        x:Name="ToggleButton"
                                        Width="115"
                                        Height="20"
                                        Background="Transparent"
                                        Checked="DockWindowToggleButton_Checked">
                                        <ToggleButton.Template>
                                            <ControlTemplate>
                                                <StackPanel Background="{TemplateBinding Background}" Orientation="Horizontal">
                                                    <Image
                                                        Width="15"
                                                        Height="15"
                                                        Margin="2,0,2,0"
                                                        Source="/MapSuiteGisEditor;component/Images/open.png" />
                                                    <TextBlock Text="Open Windows" />
                                                    <Polyline
                                                        Margin="3,10,0,0"
                                                        Fill="Black"
                                                        Points="0,0 3,0 1.5,1.5"
                                                        Stroke="Black" />
                                                    <!--<Path Stroke="Black" StrokeThickness="1" Data="M 10,100 L 100,100 100,50 Z M 10,10 100,10 100,40 Z" />-->
                                                </StackPanel>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Border>
                                <gisToolKit:NonTopMostPopup
                                    x:Name="Popup1"
                                    AllowsTransparency="True"
                                    IsOpen="{Binding ElementName=ToggleButton, Path=IsChecked, Mode=TwoWay}"
                                    OffsetX="10"
                                    OffsetY="9"
                                    Placement="Bottom"
                                    PlacementTarget="{Binding ElementName=ToggleButton}"
                                    PopupAnimation="Scroll"
                                    StaysOpen="True">
                                    <Grid>
                                        <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid Width="35">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#F3F7FB" Offset="0" />
                                <GradientStop Color="#F0F5FA" Offset="0.19" />
                                <GradientStop Color="#EFF4FA" Offset="0.39" />
                                <GradientStop Color="#EBF1F9" Offset="0.39" />
                                <GradientStop Color="#E5EDF7" Offset="0.79" />
                                <GradientStop Color="#E0EAF5" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Grid.Background>
                </Grid>
                <Grid Background="White" Grid.Column="1" />-->
                                        <ListBox
                                            x:Name="ltb"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Margin="0,3,0,2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="30" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Border
                                                            Width="21"
                                                            Height="18"
                                                            Margin="3,0,0,0"
                                                            BorderBrush="#C29B29"
                                                            BorderThickness="1"
                                                            Visibility="{Binding HookVisibility, Mode=OneWay}">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Offset="0" Color="#FFD99A" />
                                                                        <GradientStop Offset="0.19" Color="#FFCB73" />
                                                                        <GradientStop Offset="0.39" Color="#FFC661" />
                                                                        <GradientStop Offset="0.39" Color="#FFCA68" />
                                                                        <GradientStop Offset="0.79" Color="#FFCA6A" />
                                                                        <GradientStop Offset="1" Color="#FFCE72" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Path
                                                                Width="18"
                                                                Height="18"
                                                                Margin="4,4,0,0"
                                                                Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z"
                                                                Fill="Black"
                                                                Stroke="Black"
                                                                StrokeThickness="0.2" />
                                                        </Border>
                                                        <TextBlock
                                                            Grid.Column="1"
                                                            Margin="10,0,0,0"
                                                            Text="{Binding Name, Mode=OneWay}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <Border
                                                                    x:Name="ItemPanel"
                                                                    Background="Transparent"
                                                                    BorderThickness="1"
                                                                    MouseEnter="Border_MouseEnter"
                                                                    MouseLeave="Border_MouseLeave">
                                                                    <ContentPresenter />
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="MouseLeftButtonUp" Handler="ListBoxItem_MouseLeftButtonUp" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Name}" Value="--">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate>
                                                                        <Separator />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                        </ListBox>
                                    </Grid>
                                </gisToolKit:NonTopMostPopup>
                            </Grid>
                        </r:RibbonGroup>
                    </r:RibbonTab>
                </r:Ribbon.Items>
            </r:Ribbon>
            <a:DockingManager
                x:Name="DockManager"
                Grid.Row="1"
                ActiveDocumentChanged="DockManager_ActiveDocumentChanged"
                Loaded="DockManager_Loaded">
                <a:DockingManager.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="../Themes/DockTheme.xaml" />
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>
                </a:DockingManager.Resources>
                <a:ResizingPanel x:Name="defaultPanel" Orientation="Horizontal">
                    <a:DocumentPane
                        x:Name="defaultPane"
                        CanClickPlusButton="DocumentPane_CanClickPlusButton"
                        PlusButtonClicked="DocumentPane_PlusButtonClicked" />
                    <a:DockablePane a:ResizingPanel.ResizeWidth="150">
                        <a:DockableContent
                            Name="DocumentsList"
                            Title="{DynamicResource ResourceKey=ShellMapListTitle}"
                            StateChanged="DockableContentState_Changed"
                            Tag="True">
                            <ListBox
                                Name="DocumentsListBox"
                                ContextMenu="{StaticResource DocumentsListContextMenu}"
                                ContextMenuOpening="DocumentsList_ContextMenuOpening">
                                <ListBox.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue" />
                                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightBlue" />
                                </ListBox.Resources>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <ContentControl
                                            Width="{Binding ElementName=DocumentsListBox, Path=ActualWidth}"
                                            Margin="1"
                                            MouseDoubleClick="DocumentsList_MouseDoubleClick">
                                            <StackPanel>
                                                <gisToolKit:RenameTextBlock Text="{Binding Path=Title}" TextRenamed="RenameControl_TextRenamed" />
                                            </StackPanel>
                                        </ContentControl>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="ContextMenu">
                                            <Setter.Value>
                                                <ContextMenu>
                                                    <MenuItem
                                                        Command="{x:Static local:GisEditorCommands.NewDocumentCommand}"
                                                        Header="{DynamicResource AddDocumentHeader}"
                                                        Icon="{StaticResource CreateDocumentIconKey}" />
                                                    <MenuItem
                                                        Command="{x:Static local:GisEditorCommands.DeleteActiveDocumentCommand}"
                                                        Header="{DynamicResource DeleteDocumentHeader}"
                                                        Icon="{StaticResource DeleteDocumentIconKey}" />
                                                    <MenuItem
                                                        Command="{x:Static local:GisEditorCommands.RenameDocumentCommand}"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                                        Header="{DynamicResource RenameDocumentHeader}"
                                                        Icon="{StaticResource RenameDocumentIconKey}" />
                                                </ContextMenu>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </a:DockableContent>
                    </a:DockablePane>
                </a:ResizingPanel>
            </a:DockingManager>
            <StatusBar Grid.Row="2">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem
                    Name="mouseCoordinateStatus"
                    Grid.Column="0"
                    FontFamily="Arial"
                    FontSize="11" />
                <StatusBarItem
                    Grid.Column="1"
                    FontFamily="Arial"
                    FontSize="11">
                    <StatusBarItem.Content>
                        <StackPanel x:Name="CustomStatusBarItemPanel" Orientation="Horizontal" />
                    </StatusBarItem.Content>
                </StatusBarItem>
                <StatusBarItem
                    Name="mapStatus"
                    Grid.Column="2"
                    HorizontalContentAlignment="Right"
                    FontFamily="Arial"
                    FontSize="11" />
            </StatusBar>
        </Grid>
    </Grid>
</UserControl>
